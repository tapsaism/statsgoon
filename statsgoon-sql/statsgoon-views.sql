------------

CREATE MATERIALIZED VIEW F_SOLVER_DATA

AS

SELECT
LATEST_STATS_SEASONAL.SEASON AS season,
LATEST_STATS_SEASONAL.RECORD_DATE AS filedate,
TEAM.team,
TEAM.team_acronym,
PLAYER.position,
PLAYER.NAME as playerName,
PLAYER.position || ' - ' || PLAYER.NAME || ' - ' || LATEST_STATS_SEASONAL.HOCKEYGM_VALUE AS name,
1 AS player,
LATEST_STATS_SEASONAL.HOCKEYGM_VALUE as value,
case
	when PLAYER.position = 'FWD' then 1
	when PLAYER.position = 'DEF' then 0
	when PLAYER.position = 'GOA' then 0
end as forward,
case
	when PLAYER.position = 'FWD' then 0
	when PLAYER.position = 'DEF' then 1
	when PLAYER.position = 'GOA' then 0
end as defence,
case
	when PLAYER.position = 'FWD' then 0
	when PLAYER.position = 'DEF' then 0
	when PLAYER.position = 'GOA' then 1
end as goalie,
LATEST_STATS_SEASONAL.HOCKEYGM_AVERAGE as points_avg,
LATEST_STATS_SEASONAL.HOCKEYGM_TOTAL as points_total,
LATEST_STATS_SEASONAL.HOCKEYGM_TOTAL_GA as points_ga_only,
LATEST_STATS_SEASONAL.HOCKEYGM_TOTAL_WO_GA as points_wo_ga,
LATEST_STATS_SEASONAL.HOCKEYGM_GA_PERCENTAGE as ga_percentage,
LATEST_STATS_SEASONAL.PRICE_PER_POINT as price_per_point,
PLAYER_HISTORY.last_10_period as last_10_days,
PLAYER_HISTORY.hgm_total_last_10_games as last_10_total,
PLAYER_HISTORY.hgm_avg_last_10_games as last_10_avg,
PLAYER_HISTORY.last_5_period as last_5_days,
PLAYER_HISTORY.hgm_total_last_5_games as last_5_total,
PLAYER_HISTORY.hgm_avg_last_5_games as last_5_avg,
PLAYER_HISTORY.last_3_period as last_3_days,
PLAYER_HISTORY.hgm_total_last_3_games as last_3_total,
PLAYER_HISTORY.hgm_avg_last_3_games as last_3_avg,
PLAYER_HISTORY.std_dev,
PLAYER_HISTORY.median

FROM F_PLAYER_LATEST_GAMES_SEASONAL LATEST_STATS_SEASONAL

INNER JOIN D_PLAYER PLAYER
ON PLAYER.NAME = LATEST_STATS_SEASONAL.NAME

INNER JOIN D_TEAM TEAM
ON TEAM.TEAM = LATEST_STATS_SEASONAL.TEAM

LEFT JOIN F_PLAYER_HISTORY PLAYER_HISTORY
ON LATEST_STATS_SEASONAL.TEAM = PLAYER_HISTORY.TEAM
AND LATEST_STATS_SEASONAL.NAME = PLAYER_HISTORY.PLAYER
AND LATEST_STATS_SEASONAL.SEASON = PLAYER_HISTORY.SEASON
AND PLAYER_HISTORY.LATEST = 1;

----------

CREATE OR REPLACE FUNCTION solver_data()
RETURNS SETOF F_SOLVER_DATA AS
$DELIMETER$

  SELECT * FROM F_SOLVER_DATA

$DELIMETER$
LANGUAGE 'sql';


----------

CREATE MATERIALIZED VIEW F_DAILY_STATS

AS

SELECT
RECORD_DATE AS FILEDATE,
PLAYER,
TEAM.TEAM,
TEAM.TEAM_ACRONYM,
POSITION,
HOCKEYGM_AVERAGE AS POINTS_AVG,
HOCKEYGM_TOTAL AS POINTS_TOTAL,
HOCKEYGM_VALUE::INTEGER AS PLAYER_VALUE,
DAILY_POINTS AS POINTS_DAILY,
GAME_DAY AS GAME_PLAYED,
SEASON
FROM F_PLAYER_DAILY_STATS DAILY_STATS

INNER JOIN D_DATE_SEASON SEASON
ON DAILY_STATS.RECORD_DATE = SEASON.DATE

INNER JOIN D_PLAYER PLAYER
ON PLAYER.NAME = DAILY_STATS.PLAYER

INNER JOIN D_TEAM TEAM
ON TEAM.TEAM = DAILY_STATS.TEAM
;

----------

CREATE OR REPLACE FUNCTION daily_stats()
RETURNS SETOF F_DAILY_STATS AS
$DELIMETER$

  SELECT * FROM F_DAILY_STATS

$DELIMETER$
LANGUAGE 'sql';

----------
